{
  "hash": "51043793a123430d7bc54d7f193de3a5",
  "result": {
    "markdown": "---\ntitle: \"Data Visualization\"\nauthor: \"Seyed Hojat Naghavi\"\n---\n\n::: {.cell hash='04_data_visualization_cache/html/unnamed-chunk-1_d8bb32e5860813124301151e267d6f0e'}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> ── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n#> ✔ dplyr     1.1.4     ✔ readr     2.1.5\n#> ✔ forcats   1.0.0     ✔ stringr   1.5.1\n#> ✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n#> ✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n#> ✔ purrr     1.0.2     \n#> ── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n#> ✖ dplyr::filter() masks stats::filter()\n#> ✖ dplyr::lag()    masks stats::lag()\n#> ℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n:::\n\n```{.r .cell-code}\nlibrary(lubridate)\nlibrary(ggrepel)\n\ncovid_data_tbl <- read_csv(\"https://covid.ourworldindata.org/data/owid-covid-data.csv\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> Rows: 399319 Columns: 67\n#> ── Column specification ────────────────────────────────────────────────────────\n#> Delimiter: \",\"\n#> chr   (4): iso_code, continent, location, tests_units\n#> dbl  (62): total_cases, new_cases, new_cases_smoothed, total_deaths, new_dea...\n#> date  (1): date\n#> \n#> ℹ Use `spec()` to retrieve the full column specification for this data.\n#> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n:::\n\n```{.r .cell-code}\ncovid = covid_data_tbl %>% select(continent, location, date, new_cases)\n\neuropean_countries <- c(\"France\", \"Germany\", \"Spain\", \"United Kingdom\")\ncovid_filtered = covid %>% filter(location %in% european_countries | location == \"United States\") %>% filter(date<'2022-04-19')\n\ncovid_data_plot <- covid_filtered %>%\n  group_by(location, date) %>%\n  summarize(cumulative_cases = sum(new_cases, na.rm = TRUE)) %>%\n  mutate(cumulative_cases = cumsum(cumulative_cases))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> `summarise()` has grouped output by 'location'. You can override using the\n#> `.groups` argument.\n```\n:::\n\n```{.r .cell-code}\n# Plot the data\nggplot(covid_data_plot, aes(x = date, y = cumulative_cases, group = location, colour = location)) +\n  geom_line()+ #color = \"#00BFC4\") + \n  scale_x_date(date_breaks = \"1 month\", date_labels = \"%b %y\") +\n  scale_y_continuous(labels = scales::comma) +\n  labs(x = \"Date\", y = \"Cumulative Cases\", title = \"COVID-19 confirmed cases worldwide\") +\n  theme_minimal() +\n  geom_label_repel(\n    aes(label = ifelse(date == max(date), as.character(cumulative_cases), \"\")),\n    nudge_x = 300,\n    nudge_y = 3000,\n    size = 4\n  ) +\n  theme(axis.text.x = element_text(angle = 70, hjust = 1))\n```\n\n::: {.cell-output-display}\n![](04_data_visualization_files/figure-html/unnamed-chunk-1-1.png){width=672}\n:::\n:::\n\n::: {.cell hash='04_data_visualization_cache/html/unnamed-chunk-2_3734822a1ff278f71d04bb427e0c7843'}\n\n```{.r .cell-code}\nlibrary(maps)\n\nworld <- map_data(\"world\")\n\n\n# Calculate mortality rate as deaths/population\n# due to memory limit, I only showed the selected countries\n#selected_countries <- c(\"France\", \"Germany\", \"United Kingdom\", \"China\", \"United States\")\nselected_countries <- c(\"Germany\")\n\ncovid_data_f2 <- covid_data_tbl %>% \n  filter(location %in% selected_countries  ) %>% \n  filter(date<'2022-04-19') %>%\n  mutate(mortality_rate = total_deaths / population)\n\ncovid_data_f2 <- covid_data_f2 %>%\n  mutate(location = case_when(\n    location == \"United Kingdom\" ~ \"UK\",\n    location == \"United States\" ~ \"USA\",\n    location == \"Democratic Republic of Congo\" ~ \"Democratic Republic of the Congo\",\n    TRUE ~ location\n  )) %>%\n  distinct()\n\n# Join the COVID-19 data with the world map data\nplot_data <- world %>%\n  left_join(covid_data_f2, by = c(\"region\" = \"location\"))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> Warning in left_join(., covid_data_f2, by = c(region = \"location\")): Detected an unexpected many-to-many relationship between `x` and `y`.\n#> ℹ Row 34099 of `x` matches multiple rows in `y`.\n#> ℹ Row 1 of `y` matches multiple rows in `x`.\n#> ℹ If a many-to-many relationship is expected, set `relationship =\n#>   \"many-to-many\"` to silence this warning.\n```\n:::\n\n```{.r .cell-code}\n# Plot the data\nggplot(plot_data) +\n  geom_map(aes(map_id = region, fill = mortality_rate), map = world) +\n  expand_limits(x = world$long, y = world$lat) +\n  scale_fill_continuous(low = \"red\", high = \"black\", na.value = \"grey50\", label = scales::percent) +\n  labs(fill = \"Mortality Rate\", title = \"Confirmed COVID-19 Mortality\") +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](04_data_visualization_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n:::\n\n\n### Due to the following error, I couldn't map all the countries. I hope the above output could at least show my attempt.\n\nprocessing file: 04_data_visualization.qmd\n  |....................................................| 100% [unnamed-chunk-2]\nQuitting from lines  at lines 44-81 [unnamed-chunk-2] (04_data_visualization.qmd)\nError in `lazyLoadDBinsertVariable()`:\n! long vectors not supported yet: /Volumes/Builds/R4/R-4.4.0/src/main/connections.c:6261\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../../site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}